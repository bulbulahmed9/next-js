{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bulbul Ahmed\\\\Desktop\\\\next-app\\\\src\\\\pages\\\\list.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\n\nvar List = function List(_ref) {\n  var list = _ref.list;\n  console.log(list);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \" List Page \"));\n};\n\n_c = List;\nList.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://jsonplaceholder.typicode.com/posts\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            list: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/Bulbul Ahmed/Desktop/next-app/src/pages/list.js"],"names":["Link","List","list","console","log","getInitialProps","fetch","res","json","data"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAGrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADG,CAAP;AAYH,CAhBD;;KAAMD,I;AAmBNA,IAAI,CAACI,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACHC,KAAK,CAAC,4CAAD,CADF;;AAAA;AACfC,UAAAA,GADe;AAAA;AAAA,iBAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAAA,2CAGZ;AAACP,YAAAA,IAAI,EAAEO;AAAP,WAHY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAMA,eAAeR,IAAf","sourcesContent":["import Link from 'next/link'\r\n\r\nconst List = ({list}) => {\r\n\r\n\r\n    console.log(list)\r\n    return <div>\r\n        <h1> List Page </h1>\r\n        {\r\n            // peoples.map(e => (\r\n            //     <div>\r\n            //         <Link as={`${e.v}/${e.name}`} href=\"[persons]/[person]\">\r\n            //             <a> {e.name} </a>\r\n            //         </Link>\r\n            //     </div>\r\n            // ))\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nList.getInitialProps = async () => {\r\n    let res = await fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n    let data = await res.json()\r\n    return {list: data }\r\n}\r\n\r\nexport default List"]},"metadata":{},"sourceType":"module"}